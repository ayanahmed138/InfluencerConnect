@model IEnumerable<InfluencerConnect.Models.ChatsViewModel>


<!-- Icons -->
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/fonts/fontawesome.css" />
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/fonts/tabler-icons.css" />
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/fonts/flag-icons.css" />

<!-- Core CSS -->
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/css/rtl/core.css" class="template-customizer-core-css" />
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/css/rtl/theme-default.css" class="template-customizer-theme-css" />

<!-- Vendors CSS -->
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/libs/bootstrap-maxlength/bootstrap-maxlength.css" />

<!-- Page CSS -->
<link rel="stylesheet" href="~/Content/chat style/assets/vendor/css/pages/app-chat.css">

<!-- Core JS -->
<!-- build:js chat style/assets/vendor/js/core.js -->

<script src="chat style/assets/vendor/js/bootstrap.js"></script>
<script src="chat style/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

<!-- Layout wrapper -->
<div class="layout-wrapper layout-content-navbar  ">
    <div class="layout-container">
        <!-- Layout container -->
        <div class="layout-page">
            <!-- Content wrapper -->
            <div class="content-wrapper">
                <!-- Content -->
                <div class="container-xxl flex-grow-1 container-p-y">
                    <div class="app-chat card overflow-hidden">
                        <div class="row g-0">
                            <!-- Chat & Contacts -->
                            <div class="col app-chat-contacts app-sidebar flex-grow-0 overflow-hidden border-end" id="app-chat-contacts">
                                <div class="sidebar-header h-px-75 px-5 border-bottom d-flex align-items-center">
                                    <div class="d-flex align-items-center me-6 me-lg-0">
                                        <div class="flex-shrink-0 avatar avatar-online me-4" data-bs-toggle="sidebar" data-overlay="app-overlay-ex" data-target="#app-chat-sidebar-left">
                                            <img class="user-avatar rounded-circle cursor-pointer" src="@ViewBag.UserImage" alt="Avatar">
                                        </div>
                                        <div class="flex-grow-1 input-group input-group-merge">
                                            <span class="input-group-text" id="basic-addon-search31"><i class="ti ti-search"></i></span>
                                            <input type="text" id="search-contact" class="form-control chat-search-input" placeholder="Search...">
                                        </div>
                                    </div>

                                </div>
                                <div class="sidebar-body">
                                    <!-- Chats -->
                                    <ul class="list-unstyled chat-contact-list py-2 mb-0" id="chat-list">
                                        <li class="chat-contact-list-item chat-contact-list-item-title mt-0">
                                            <h5 class="text-primary mb-0">Chats</h5>
                                        </li>

                                        @if ((ViewBag.BlockMessaging != null && (bool)ViewBag.BlockMessaging))
                                        {
                                    <li class="chat-contact-list-item chat-list-item-0">
                                        <h6 class="text-muted mb-0">Your Account have not been Aprooved</h6>
                                    </li>
                                        }
                                        else
                                        {

                                        if (!Model.Any())
                                        {
                                            <li class="chat-contact-list-item chat-list-item-0">
                                                <h6 class="text-muted mb-0">No Chats Found</h6>
                                            </li>
                                        }
                                        else
                                        {

                                            foreach (var chat in Model)
                                            {

                                                <li class="chat-contact-list-item mb-1">
                                                    <a class="d-flex align-items-center chat-item @(chat.ChatId == (int?)ViewBag.SelectedChatId ? "auto-open" : "")"
                                                       data-user-name="@chat.OtherUserName"
                                                       data-user-img="@chat.OtherUserImg"
                                                       data-chat-id="@chat.ChatId"
                                                       data-other-userid="@chat.OtherUserId">
                                                        <div class="flex-shrink-0 avatar avatar-online">
                                                            <img src="@chat.OtherUserImg" alt="Avatar" class="rounded-circle">
                                                        </div>
                                                        <div class="chat-contact-info flex-grow-1 ms-4">
                                                            <div class="d-flex justify-content-between align-items-center">
                                                                <h6 class="chat-contact-name text-truncate m-0 fw-normal">@chat.OtherUserName</h6>
                                                                <small class="text-muted">@chat.CreatedOn</small>
                                                            </div>
                                                            <small id="last-message-@chat.ChatId" class="chat-contact-status text-truncate">@chat.LastMessage</small>
                                                        </div>
                                                    </a>
                                                </li>
                                            }

                                        }
                                        }

                                    </ul>
                                    <!-- Contacts -->

                                </div>
                            </div>
                            <!-- /Chat contacts -->
                            <!-- Chat History -->
                            <div class="col app-chat-history">
                                <div class="chat-history-wrapper">
                                    <div class="chat-history-header border-bottom">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="d-flex overflow-hidden align-items-center">
                                                <i class="ti ti-menu-2 ti-lg cursor-pointer d-lg-none d-block me-4" data-bs-toggle="sidebar" data-overlay data-target="#app-chat-contacts"></i>
                                                <div class="flex-shrink-0 avatar avatar-online">
                                                    <img src="" id="chatUserImage" alt="Avatar" class="rounded-circle" data-bs-toggle="sidebar" data-overlay data-target="#app-chat-sidebar-right">
                                                </div>
                                                <div class="chat-contact-info flex-grow-1 ms-4">
                                                    <h6 class="m-0 fw-normal" id="chatUserName"></h6>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="chat-history-body">
                                        <ul class="list-unstyled chat-history">
                                        </ul>
                                    </div>
                                    <!-- Chat message form -->
                                    <div class="chat-history-footer shadow-xs">
                                        <div class="form-send-message d-flex justify-content-between align-items-center ">
                                            <input id="messageInput" class="form-control message-input border-0 me-4 shadow-none" placeholder="Type your message here...">
                                            <div class="message-actions d-flex align-items-center">
                                                @if (ViewBag.IsInfluencer == true)
                                                {
                                                <button class="btn btn-outline-secondary" style="margin-right:1rem" id="generateInvoiceBtn" title="Send Invoice">
                                                    <i class="fas fa-file-invoice-dollar"></i>
                                                </button>
                                                }
                                                <button id="sendButton" class="btn btn-primary d-flex send-msg-btn">
                                                    <span class="align-middle d-md-inline-block d-none">Send</span>
                                                    <i class="ti ti-send ti-16px ms-md-2 ms-0"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /Chat History -->

                        </div>
                    </div>


                </div>
                <!-- / Content -->
                <!-- Content wrapper -->
            </div>
            <!-- / Layout page -->
        </div>
    </div>
</div>

<!-- Invoice Modal -->
<div class="modal fade" id="invoiceModal" tabindex="-1" aria-labelledby="invoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="invoiceForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="invoiceModalLabel">Generate Invoice</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Bank Account Title</label>
                        <input type="text" class="form-control" id="bank-acc-title" name="BankAccountTitle" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Bank Account Number</label>
                        <input type="text" class="form-control" id="bank-acc-no" name="BankAccountNumber" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Bank Name</label>
                        <input type="text" class="form-control" id="bank-name" name="BankName" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Amount</label>
                        <input type="number" step="0.01" id="amount" class="form-control" name="Amount" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="Description" rows="3" required></textarea>
                    </div>
                </div>

                <div class="modal-footer">
                    <button id="send-invoice" class="btn btn-success">Send Invoice</button>
                </div>
            </div>
        </div>
    </div>
</div>



<style>
    .sender {
        color: white;
    }

    .reciever {
        background-color: bisque;
    }

    .chat-contact-list-item.active .chat-contact-name,
    .chat-contact-list-item.active .chat-contact-status,
    .chat-contact-list-item.active small,
    .chat-contact-list-item.active h6 {
        color: white !important;
    }
</style>

@section Scripts {


    <script>



        $(document).ready(function () {

            // Connect to hub
            var chat = $.connection.chatHub;
            // Start the connection
            $.connection.hub.start().done(function () {
                console.log("Connected to SignalR hub!");
            }).fail(function (err) {
                console.error("Connection failed: " + err);
            });

           

            $.connection.hub.disconnected(function () {
                console.warn("Disconnected. Attempting reconnect...");
                setTimeout(function () {
                    $.connection.hub.start();
                }, 3000); // retry in 3 seconds
            });




            const senderUserImage = '@ViewBag.UserImage';

            let activateChatId = null;
            let receiverUserId = null;
            let currentChatId = null;
            let chatId = null;

            $(function () {
                const autoOpen = $('.chat-item.auto-open');
                if (autoOpen.length) {
                    autoOpen.trigger('click');
                }
            });

            // When a chat is clicked
            $('.chat-item').on('click', function (e) {

                e.preventDefault();

                // Remove active class from all items
                $('.chat-contact-list-item').removeClass('active');

                // Add active class to the clicked item's parent <li>
                $(this).closest('.chat-contact-list-item').addClass('active');




                // Get user details
                var userName = $(this).data('user-name');
                var userImg = $(this).data('user-img');
                chatId = $(this).data('chat-id');

                activeChatId = chatId;

                currentChatId = chatId;
                receiverUserId = $(this).data('other-userid');
                chat.server.updateActiveChat(chatId);



                // Update header
                $('#chatUserName').text(userName);
                $('#chatUserImage').attr('src', userImg);

                // Optional: Clear previous messages
                $('.chat-history').empty();

                // Call backend to load chat messages (example using AJAX)
                $.ajax({
                    url: '/Chats/GetMessages', // Adjust to your controller route
                    type: 'GET',
                    data: { chatId: chatId },
                    success: function (messages) {
                        messages.forEach(function (msg) {
                            var isSender = msg.isSender;
                            var msgHtml = `
        <li class="chat-message ${isSender ? 'chat-message-right' : ''}">
            <div class="d-flex overflow-hidden">
                ${isSender ? '' : `
                <div class="user-avatar flex-shrink-0 me-4">
                    <div class="avatar avatar-sm">
                        <img src="${userImg}" class="rounded-circle" alt="Avatar">
                    </div>
                </div>`}
                <div class="chat-message-wrapper flex-grow-1">
                    <div class="chat-message-text ${isSender ? 'sender' : 'reciever'}">
                        <p class="mb-0" ${isSender ? 'style="color:white;"' : ''}>${msg.content}</p>
                    </div>
                    <div class="${isSender ? 'text-end' : ''} text-muted mt-1">
                        <small>${msg.timestamp}</small>
                    </div>
                </div>
                ${isSender ? `
                <div class="user-avatar flex-shrink-0 ms-4">
                    <div class="avatar avatar-sm">
                        <img src="${senderUserImage}" class="rounded-circle" alt="Avatar">
                    </div>
                </div>` : ''}
            </div>
        </li>`;
                            $('.chat-history').append(msgHtml);
                        });

                        // Scroll to bottom
                        $('.chat-history-body').scrollTop($('.chat-history-body')[0].scrollHeight);
                    }
                });
            });







            // Receive message from the server
            chat.client.ReceiveMessage = function (senderId, message, timestamp, isSender, chatId) {

                    $('#last-message-' + chatId).text(message);
                if (chatId == activeChatId) {
                    let userImg = $('#chatUserImage').attr('src');

                    var msgHtml = `
                    <li class="chat-message ${isSender ? 'chat-message-right' : ''}">
                    <div class="d-flex overflow-hidden">
                    ${isSender ? '' : `
                    <div class="user-avatar flex-shrink-0 me-4">
                    <div class="avatar avatar-sm">
                    <img src="${userImg}" class="rounded-circle" alt="Avatar">
                    </div>
                    </div>`}
                    <div class="chat-message-wrapper flex-grow-1">
                    <div class="chat-message-text ${isSender ? 'sender' : 'reciever'}" >
                    <p style="${isSender ? 'color: white;' : ''}" class="mb-0">${message}</p>
                    </div>
                    <div class="${isSender ? 'text-end' : ''} text-muted mt-1">
                    <small>${timestamp}</small>
                    </div>
                    </div>
            ${isSender ? `
            <div class="user-avatar flex-shrink-0 ms-4">
                <div class="avatar avatar-sm">
                    <img src="${senderUserImage}" class="rounded-circle" alt="Avatar">
                </div>
            </div>` : ''}
        </div>
    </li>`;

                    $('.chat-history').append(msgHtml);
                    $('.chat-history-body').scrollTop($('.chat-history-body')[0].scrollHeight);
                }
            };




            $('#sendButton').click(function (e) {
                e.preventDefault();
                var message = $('#messageInput').val().trim();
                $('#last-message-' + chatId).text(message);
                if (message === '') return;

                //var receiverUserId = $('.chat-item').data('other-userid');  // other user ID
                //var chatId = $('.chat-item').data('chat-id');          // current chat session ID

                chatId = currentChatId;

                if (!receiverUserId || !chatId) {
                    alert('Please select a chat first.');
                    return;
                }

                chat.server.sendMessage(chatId, receiverUserId, message).done(function () {
                    $('#messageInput').val('');
                }).fail(function (err) {
                    console.error('Send failed: ' + err);
                });
            });

            $(document).on('click', '#generateInvoiceBtn', function () {
                
                $('#invoiceModal').modal('show');

            });

            $(document).on('click', '#send-invoice', function () {

                const data = {
                    BankAccountTitle: $('#bank-acc-title').val(),
                    BankAccountNumber: $('#bank-acc-no').val(),
                    BankName: $('#bank-name').val(),
                    Amount: $('#amount').val(),
                    Description: $('#description').val(),
                    ChatId: currentChatId // pass this from your page
                };


                $.ajax({
                    url: '/Invoices/GenerateAndSend',
                    type: 'POST',
                    data: data,
                    success: function (res) {
                        if (res.success) {
                          
                            $('#invoiceModal').modal('hide');
                            
                            const message = res.messageHtml;
                            const timestamp = res.timestamp;
                            const isSender = true;
                            const userImg = $('#chatUserImage').attr('src');

                            var msgHtml = `
<li class="chat-message ${isSender ? 'chat-message-right' : ''}">
  <div class="d-flex overflow-hidden">
    ${isSender ? '' : `
    <div class="user-avatar flex-shrink-0 me-4">
      <div class="avatar avatar-sm">
        <img src="${userImg}" class="rounded-circle" alt="Avatar">
      </div>
    </div>`}
    <div class="chat-message-wrapper flex-grow-1">
      <div class="chat-message-text ${isSender ? 'sender' : 'reciever'}">
        <p style="${isSender ? 'color: white;' : ''}" class="mb-0">${message}</p>
      </div>
      <div class="${isSender ? 'text-end' : ''} text-muted mt-1">
        <small>${timestamp}</small>
      </div>
    </div>
    ${isSender ? `
    <div class="user-avatar flex-shrink-0 ms-4">
      <div class="avatar avatar-sm">
        <img src="${senderUserImage}" class="rounded-circle" alt="Avatar">
      </div>
    </div>` : ''}
  </div>
</li>`;
                            $('#last-message-' + chatId).text("Invoice Sent");
                            $('.chat-history').append(msgHtml);
                            $('.chat-history-body').scrollTop($('.chat-history-body')[0].scrollHeight);
                            alert("Invoice sent!");

                        } else {
                            alert("Failed to generate invoice.");
                        }
                    },
                    error: function () {
                        alert("Error sending invoice.");
                    }
                });

            });

            $('#messageInput').keydown(function (e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault(); // prevent new line
                    $('#sendButton').click(); // trigger the click function
                }
            });

            $(document).on('change', '#search-contact', function () {

                var keyword = $('#search-contact').val();
                $.ajax({
                    url: '/Chats/FindChats?keyword=' + keyword,
                    type: 'GET',
                    success: function (chats) {


                    }


                });

            });

        });


    </script>




}