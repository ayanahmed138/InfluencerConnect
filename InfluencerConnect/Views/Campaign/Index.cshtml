@model List<InfluencerConnect.Models.CampaignViewHelper>

@{
    ViewBag.Title = "Campaigns";
}

<!-- Breadcrumbs -->
<section class="inflanar-breadcrumb">
    <div class="container">
        <div class="row">
            <!-- Breadcrumb-Content -->
            <div class="col-12">
                <div class="inflanar-breadcrumb__inner">
                    <div class="inflanar-breadcrumb__content">
                        <h2 class="inflanar-breadcrumb__title m-0">Campaigns</h2>
                        <ul class="inflanar-breadcrumb__menu list-none">
                            <li><a href="~/Home">Home</a></li>
                            <li class="active"><a href="/Campaign">Campaign</a></li>

                        </ul>
                    </div>
                    <div class="inflanar-breadcrumb__img">
                        <div class="inflanar-breadcrumb__thumb">
                            <img src="/Content/Images/in-bread-thumb.png">
                        </div>
                        <div class="inflanar-breadcrumb__group">
                            <img src="/Content/Images/in-social-group.png">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End breadcrumbs -->
<!-- Features -->
<section class="inflaner-inner-page pd-top-90 pd-btm-120">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-12 mg-top-30">
                <div class="inflanar-service-sidebar">
                    <!-- Single Sidebar -->
                    <div class="inflanar-service-sidebar__single">
                        <h4 class="inflanar-service-sidebar__title m-0">Search</h4>
                        <!-- Inflanar Search -->
                        <div class="inflanar-search-form inflanar-search-form__service mg-top-10">
                            <div class="inflanar-search-form__form">
                                <input type="text" id="searchKeyword" placeholder="Search">
                                <button id="searchButton" class="inflanar-btn inflanar-btn--search"><img src="/Content/Images/in-search-white.svg"></button>
                            </div>
                        </div>
                        <!-- End Inflanar Search -->
                    </div>
                    <!-- Single Sidebar -->
                    <div class="inflanar-service-sidebar__single mg-top-50">
                        <div class="inflanar-service-sidebar__checkboxd">
                            <h4 class="inflanar-service-sidebar__title m-0">Select Category</h4>
                            @foreach (var item in (List<InfluencerConnect.Models.CategoryCountViewModel>)ViewBag.CategoryCounts)
                            {
                                <div class="form-group inflanar-form-checkbox mg-top-15">
                                    <input type="checkbox" class="category-filter" value="@item.CategoryId">
                                    <label class="inflanar-form-label" for="cat1">@item.CategoryName <span>@item.Count</span></label>
                                </div>

                            }
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-lg-9 col-12" id="campaignResults">
                @Html.Action("_CampaignPartialView", "Campaign", new { page = 1 })
            </div>

        </div>
    </div>
</section>
<!-- End Features -->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
            

        function getSelectedValues(className) {
            return $('.' + className + ':checked').map(function () {
                return this.value;
            }).get();
        }

        function fetchCampaigns(page = 1) {
            const categories = getSelectedValues('category-filter');
            const keyword = $('#searchKeyword').val();

            $.ajax({
                url: '/Campaign/SearchCampaigns',
                type: 'GET',
                traditional: true,
                data: {
                    categories: categories,
                    keyword: keyword,
                    page: page
                },
                success: function (response) {
                    $('#campaignResults').html(response);
                },
                error: function () {
                    alert('Failed to fetch campaigns.');
                }
            });
        }

        // Listen to pagination click
        $(document).on('click', '.page-link', function (e) {
            e.preventDefault();
            const page = $(this).data('page');

            if (page > 0) {
                fetchCampaigns(page);
            }
        });


        $('#searchButton').on('click', function () {

            fetchCampaigns(); // Triggers AJAX with page = 1
        });

        $(document).ready(function () {
            $(document).on('click', '.start-chat-btn', function (e) {
                e.preventDefault(); // Stop <a> from navigating

                var otherUserId = $(this).data('userid');

                $.ajax({
                    url: '/Chats/StartChat',  // your backend API to start/get chat
                    type: 'POST',             // or 'POST' if you prefer
                    data: { targetUserId: otherUserId },
                    success: function (response) {
                        // Assuming backend returns success status or similar
                        if (response.success) {
                            // Redirect to chat index page to load all chats
                            window.location.href = '/Chats/Index?chatId=' + response.chatId;;
                        } else {
                            alert("Failed to start chat.");
                        }
                    },
                    error: function () {
                        alert("Error while starting chat.");
                    }
                });

            });
        });


    </script>



}